environment:
  matrix:
    - nodejs_version: '16'
install:
  - set LIB=C:\OpenSSL-Win64\lib;%LIB%
  - set INCLUDE=C:\OpenSSL-Win64\include;%INCLUDE%
  - set CI=true
  - move "C:\Program Files\Git\usr\bin\msys-2.0.dll" "C:\Program Files\Git\usr\bin\msys-2.0-bak.dll"
  - cmd: build.sh
matrix:
  fast_finish: true
build: off
clone_depth: 1
test_script:
  - refreshenv
cache:
  - '%APPDATA%\npm-cache'
  - '%LOCALAPPDATA%\pip\Cache'
  - '%LOCALAPPDATA%\Composer\files -> composer.lock'
  # - C:\ProgramData\chocolatey\bin
  # - C:\ProgramData\chocolatey\lib
  # - C:\tools\php81
  - .cache
after_build:
  # Remove old or huge cache files to hopefully not exceed the 1GB cache limit.
  #
  # If the cache limit is reached, the cache will not be updated (of not even
  # created in the first run). So this is a trade of between keeping the cache
  # current and having a cache at all.
  # NB: This is done only `on_success` since the cache in uploaded only on
  # success anyway.
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -mtime +360 -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -size +10M -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -empty -delete
  # Show size of cache
  - C:\cygwin\bin\du -hs "%LOCALAPPDATA%\pip\Cache"
